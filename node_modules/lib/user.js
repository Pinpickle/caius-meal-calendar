'use strict';

var mongoose = require('mongoose');
var sh = require('shorthash');
var slug = require('slug');

var userSchema = mongoose.Schema({
  _camId: String,
  cookies: [ { } ],
  slug: String,
  lastLogged: { type: Date, default: Date.now }
});

userSchema.virtual('camId').get(function () {
  return this._camId;
}).set(function (val) {
  this._camId = val;
  this.slug = User.generateSlug(val);
});

userSchema.methods.getEmail = function getEmail() {
  return this.camId + '@cam.ac.uk';
};

userSchema.methods.loginMocker = function loginMocker(mocker) {
  var self = this;
  return mocker.loginFromCookies(this.cookies)
    .then(function () {
      self.updateFromMocker(mocker);
    });
};

userSchema.methods.updateFromMocker = function updateFromMocker(mocker) {
  this.cookies = mocker.getCookies();
  this.lastLogged = Date.now();
};

userSchema.statics.generateSlug = function generateSlug(id) {
  return slug(id) + '-' + sh.unique(id);
};

var User = module.exports = mongoose.model('User', userSchema);
