'use strict';

var User = require('lib/user');
var UserMocker = require('lib/user-mocker');
var moment = require('moment');

var USER_EXPIRY = 1000 * 60 * 60 * 2; // 2 Hours
var REFRESH_RATE = 1000 * 60 * 10; // 10 Minutes

exports.startTimer = function startTimer() {
  var update = function () {
    var query = { lastLogged: { '$lt': moment().add(-USER_EXPIRY, 'ms') }, working: true };
    User.count(query)
      .then(function (count) {
        var slots = USER_EXPIRY / REFRESH_RATE;
        var updates = Math.max(10, Math.ceil(count / slots));

        return User.find(query).limit(updates).sort({ lastLogged: 1 }).exec();
      })
      .then(function (users) {
        return Promise.all(
          users.map(function (user) {
            user.loginMocker(new UserMocker())
              .then(function () {
                return user.save();
              });
          })
        );
      })
      .catch(function () {
        // Swallow errors
      })
      .then(function () {
        setTimeout(update, REFRESH_RATE);
      });
  };

  setTimeout(update, REFRESH_RATE);
};
